<?php

/**
 * @file
 *
 * Add custom fields to site wide contact form
 *
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */

/**
 * Implementation of hook_menu().
 *
 * @return $item
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_menu() {
  $item = array();
  $item['admin/build/contact/manage'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => "Manage fields",
    'title callback' => 't',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contact_field_list_field'),
    'access arguments' => array('administer site configuration'),
    'file' => 'contact_field_admin.inc',
    'file path' => drupal_get_path('module', 'contact_field'),
    'weight' => 49,
  );

  $item['admin/build/contact/display'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => "Message template",
    'title callback' => 't',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contact_field_display_field'),
    'access arguments' => array('administer site configuration'),
    'file' => 'contact_field_admin.inc',
    'file path' => drupal_get_path('module', 'contact_field'),
    'weight' => 50,
  );

  $item['admin/build/contact/add/%'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'contact_field_add_field',
    'page arguments' => array(3, 4),
    'access arguments' => array('administer site configuration'),
    'file' => 'contact_field_admin.inc',
    'file path' => drupal_get_path('module', 'contact_field'),
  );

  $item['admin/build/contact/%/edit'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'contact_field_add_field',
    'page arguments' => array(3),
    'access arguments' => array('administer site configuration'),
    'file' => 'contact_field_admin.inc',
    'file path' => drupal_get_path('module', 'contact_field'),
  );

  $item['admin/build/contact/%/delete'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contact_field_confirm_delete_field', 3),
    'access arguments' => array('administer site configuration'),
    'file' => 'contact_field_admin.inc',
    'file path' => drupal_get_path('module', 'contact_field'),
  );

  return $item;
}

/**
 * Implementation of hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_form_alter(&$form, $form_state, $form_id) {
  if (strstr($form_id, 'contact_mail') && $form_id !== 'contact_mail_user') {
    $am_elements = _get_field_details();

    if (!empty($am_elements)) {
      foreach ($am_elements as $name => $value) {
        $form[$name] = $value;
      }
    }

    $r_result = db_query("SELECT field_name, weight FROM {contact_fields} WHERE core = 1");
    while ($om_result = db_fetch_object($r_result)) {
      $form[$om_result->field_name]['#weight'] = $om_result->weight;
    }

    $r_weight = db_query("SELECT weight FROM {contact_fields}");
    while ($om_weight = db_fetch_object($r_weight)) {
      $am_weight[] = $om_weight->weight;
    }
    if (!empty($am_weight)) {
      $form['submit']['#weight'] = max($am_weight) + 2;
      $form['copy']['#weight'] = max($am_weight) + 1;
      $form['contact_information']['#weight'] = min($am_weight) - 1;
    }
  }
}

/**
 * contact_field_validate()
 *
 * Validate the form values against specified criterias
 *
 * @param $form
 * @param $form_state
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_validate($form, $form_state) {
  $ss_field_label = isset($form_state['clicked_button']['#post']['contact_field_label']) ? $form_state['clicked_button']['#post']['contact_field_label']
    : NULL;
  $ss_field_name = isset($form_state['clicked_button']['#post']['contact_field_name']) ? $form_state['clicked_button']['#post']['contact_field_name']
    : NULL;
  $ss_field_type = isset($form_state['clicked_button']['#post']['field_type']) ? $form_state['clicked_button']['#post']['field_type']
    : NULL;
  $ss_group_label = isset($form_state['clicked_button']['#post']['field_group_label']) ? $form_state['clicked_button']['#post']['field_group_label']
    : NULL;
  $ss_group_name = isset($form_state['clicked_button']['#post']['field_group_name']) ? $form_state['clicked_button']['#post']['field_group_name']
    : NULL;

  if ($ss_field_label && empty($ss_field_name)) {
    form_set_error('field_name', t("Please set a unique field name."));
  }

  if ($ss_field_label && $ss_field_name && empty($ss_field_type)) {
    form_set_error('field_type', t("Please select a field type."));
  }

  if ($ss_group_label && empty($ss_group_name)) {
    form_set_error('field_group_name', t("Please set a group name."));
  }

  $ss_field_exist = db_result(db_query("SELECT field_type FROM {contact_fields}
    WHERE field_name = '%s'", $ss_field_name));
  if ($ss_field_exist) {
    form_set_error('contact_field_name', t("A contact field with the same name already exists."));
  }
}

/**
 * _get_field_details
 *
 * Return created fields
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function _get_field_details() {
  $r_result = db_query("SELECT * FROM {contact_fields} WHERE enabled = 1 AND
    core = 0 AND (field_group IS NULL OR field_group = '')");
  while ($om_result = db_fetch_object($r_result)) {
    $am_settings = unserialize($om_result->settings);
    $form_fields[$om_result->field_name] = array(
      '#type' => $om_result->field_type,
      '#title' => t($am_settings['title']),
      '#required' => $om_result->required,
      '#weight' => $om_result->weight,
    );

    foreach ($am_settings as $key => $value) {
      if ($key != 'title' && $value != "") {
        $form_fields[$om_result->field_name]["#". $key] = $value;
      }
    }
    if (isset($form_fields[$om_result->field_name]['#options'])) {
      foreach($form_fields[$om_result->field_name]['#options'] as $key => $value) {
        $form_fields[$om_result->field_name]['#options'][$key] = t("@value", array('@value' => $value));
      }
    }
  }
  if (module_exists('contact_field_group')) {
    $r_result = db_query("SELECT * FROM {contact_fields} WHERE enabled = 1 AND
      core = 0 AND (field_group IS NULL OR field_group = '')");
    while ($om_result = db_fetch_object($r_result)) {
      $am_settings = unserialize($om_result->settings);
      $form_fields[$om_result->field_group][$om_result->field_name] = array(
        '#type' => $om_result->field_type,
        '#title' => $am_settings['title'],
        '#parent' => array($om_result->field_name),
        '#required' => $om_result->required,
        '#weight' => $om_result->weight,
      );

      foreach ($am_settings as $key => $value) {
        if ($key != 'title') {
          $form_fields[$om_result->field_group][$om_result->field_name]["#". $key] = $value;
        }
      }
    }
  }
  return $form_fields;
}

/**
 * _get_field_values
 *
 * Return all the details related to a field
 *
 * @param array $ss_field
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function _get_field_values($ss_field) {
  if ($ss_field) {
    $r_result_field = db_query("SELECT * FROM {contact_fields} WHERE
      field_name = '%s'", $ss_field);
    while ($om_result_field = db_fetch_object($r_result_field)) {
      $am_field = unserialize($om_result_field->settings);
      $am_field_value['name'] = $om_result_field->field_name;
      $am_field_value['title'] = $am_field['title'];
      $am_field_value['weight'] = $om_result_field->weight;
      $am_field_value['required'] = $om_result_field->required;
      $am_field_value['enabled'] = $om_result_field->enabled;
      foreach ($am_field as $key => $value) {
        $am_field_value[$key] = $value;
      }
    }
    return $am_field_value;
  }
}

/**
 * contact_field_filter_xss
 *
 * Filter the provided string for restricted html tags
 *
 * @param string $ss_string
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_filter_xss($ss_string) {
  return filter_xss($ss_string, _contact_field_allowed_tags());
}

/**
 * _contact_field_allowed_tags
 *
 * Return tags to be filtered from allowed values
 *
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function _contact_field_allowed_tags() {
  return array('a', 'b', 'big',  'code', 'del', 'em', 'i', 'ins',  'pre', 'q', 'small', 'span', 'strong', 'sub', 'sup', 'tt', 'ol', 'ul', 'li', 'p', 'br', 'img');
}

/**
 * _get_field_type
 *
 * Return type of the field
 *
 * @param string $ss_field_name
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function _get_field_type($ss_field_name) {
  return db_result(db_query("SELECT field_type FROM {contact_fields}
   WHERE field_name = '%s'", $ss_field_name));
}

/**
 * Implementation of hook_mail_alter().
 *
 * @param unknown_type $message
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_mail_alter(&$message) {
  if ($message['id'] == "contact_page_mail") {
    $am_fields = _get_enabled_fields();
    if (!variable_get("contact_field_use_template", 0)) {
      $ss_additional = t("Additional information") ."\n";
      foreach ($am_fields as $type => $field) {
        $as_title = array_values($field);
        $as_field = array_keys($field);
        if (is_array($message['params'][$as_field[0]])) {
          $ss_value = _get_field_setting($as_field[0], $message['params'][$as_field[0]]);
          $ss_additional .= $as_title[0] . ": \t" . $ss_value . "\n";
        }
        else {
          $ss_additional .= $as_title[0] . ": \t" . $message['params'][$as_field[0]] . "\n";
        }
      }
      $message['body'][] = "\n". $ss_additional;
    }
    else {
      foreach ($am_fields as $type => $field) {
        $as_title = array_values($field);
        $as_field = array_keys($field);
        for ($i = 0; $i < count($field); $i++) {
          $ss_value = _get_field_setting($as_field[0], $message['params'][$as_field[$i]]);
          $am_value["!". $as_field[$i]] = $ss_value;
        }
      }
      $am_value['!message'] = check_plain($message['body'][1]);
      $am_value['!mail'] = $message['params']['mail'];
      $am_value['!subject'] = $message['params']['subject'];
      $am_value['!name'] = $message['params']['name'];
      $message['body'][1] = t(variable_get("contact_field_message_template", ""), $am_value);
    }
  }
}

/**
 * _get_enabled_fields
 *
 *  Return all the enabled fields
 *
 *  @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function _get_enabled_fields() {
  $r_result = db_query("SELECT field_name, field_type, settings FROM {contact_fields}
    WHERE  enabled = 1 AND core = 0 AND field_type <> 'fieldset'");
  while ($om_result = db_fetch_object($r_result)) {
    $am_settings = unserialize($om_result->settings);
    $am_field[$om_result->field_type][$om_result->field_name] = $am_settings['title'];
  }
  return $am_field;
}

/**
 * _get_contact_field
 *
 * Return field name and description
 *
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function _get_contact_field() {
  $r_result = db_query("SELECT field_name, settings FROM {contact_fields} WHERE  enabled = 1 AND field_type <> 'fieldset'");
  $ss_value = "!message: ". t("The content of message field on the contact form") ."<br />";
  while ($om_result = db_fetch_object($r_result)) {
    if ($om_result->field_name != 'cid' && $om_result->field_name != 'message') {
      $am_settings = unserialize($om_result->settings);
      $ss_description = isset($am_settings['description']) ? $am_settings['description'] : "";
      $ss_value .= "!" . $om_result->field_name . ": " . $ss_description . "<br />";
    }
  }

  return $ss_value;
}

/**
 * _get_contact_group
 */
function _get_contact_group() {
  $r_result = db_query("SELECT field_name, settings FROM {contact_fields}
    WHERE field_type = 'fieldset'");
  $am_group[""] = t("Select");
  while ($om_result = db_fetch_object($r_result)) {
    $am_settings = unserialize($om_result->settings);
    $am_group[$om_result->field_name] = $am_settings['title'];
  }

  return $am_group;
}

/**
 * _get_field_setting
 *
 * Return human readable values for options and lists
 *
 * @param unknown_type $ss_field_name
 * @param unknown_type $ss_field_value
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function _get_field_setting($ss_field_name, $am_field_value) {
  if (!is_array($am_field_value)) {
    $am_field_value = array($am_field_value);
  }
  $am_field_type = array('textfield', 'textarea');
  $r_result = db_query("SELECT settings, field_type FROM {contact_fields} WHERE field_name = '%s'", $ss_field_name);
  $om_result = db_fetch_object($r_result);
  $am_settings = unserialize($om_result->settings);
  if (!in_array($om_result->field_type, $am_field_type)) {
    foreach ($am_field_value as $value) {
      if ($value != "" || $value != 0) {
        $ss_value .= "<li>". $am_settings['options'][$value] ."</li>";
      }
    }
    return drupal_html_to_text("<ul>". $ss_value ."</ul>");
  }
  else {
    return $am_field_value[0];
  }
}
