<?php

/**
 * @file
 *
 * Add textfields on contact form
 *
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */


/**
 * contact_textfield_field_info
 *
 * Returns field information
 *
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_textfield_info() {
  return array(
    'textfield' => array(
      'type' => 'text',
      'title' => t("Text field"),
      'description' => t("Add a text box on contact form")
    ),
    'textarea' => array(
      'type' => 'area',
      'title' => t("Textarea"),
      'description' => t("Add a text area on contact form"),
    ),
  );
}

/**
 * contact_field_add_field_text_form
 *
 * Form builder function
 *
 * @return unknown_type
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_add_field_text_form($form_state, $ss_field_name = NULL, $om_field_details = NULL) {
  $form = array();

  if (arg(3) != 'add') {
    $om_field_details = (object) _get_field_values($om_field_details);
    $form['#submit'] = array('contact_field_update');
  }
  else {
    $form['#submit'] = array('contact_field_submit');
    $form['#validate'] = array('contact_field_validate');
  }

  $form['name'] = array(
    '#type' => 'item',
    '#title' => t("Field name"),
    '#value' => $om_field_details->name,
    '#description' => t("Field name can not be changed."),
    '#weight' => -50,
  );

  $form['contact_field_name'] = array(
    '#type' => 'hidden',
    '#value' => $om_field_details->name,
  );

  $form['field_type'] = array(
    '#type' => 'hidden',
    '#default_value' => 'textfield',
  );

  $form['contact_field_label'] = array(
    '#type' => 'textfield',
    '#title' => t("Field title"),
    '#description' => t("Provide the title of the field."),
    '#default_value' => $om_field_details->title,
    '#required' => TRUE,
    '#weight' => -49,
  );

  $form['contact_field_prefix'] = array(
    '#type' => 'textfield',
    '#title' => t("Prefix"),
    '#description' => t("Add prefix to add style to the field."),
    '#default_value' => isset($om_field_details->prefix) ? $om_field_details->prefix : "",
    '#weight' => -48,
  );

  $form['contact_field_suffix'] = array(
    '#type' => 'textfield',
    '#title' => t("Suffix"),
    '#description' => t("Add suffix to add style to the field."),
    '#default_value' => isset($om_field_details->suffix) ? $om_field_details->suffix : "",
    '#weight' => -47,
  );

  $form['contact_field_maxlength'] = array(
    '#type' => 'textfield',
    '#title' => t("Maximum length"),
    '#description' => t("Maximum number of character allowed for the field."),
    '#default_value' => isset($om_field_details->maxlength) ? $om_field_details->maxlength : 255,
    '#weight' => -46,
  );

  $form['contact_field_prefix_field'] = array(
    '#type' => 'textfield',
    '#title' => t("Field prefix"),
    '#description' => t("A prefix to field itself."),
    '#default_value' => isset($om_field_details->field_prefix) ? $om_field_details->field_prefix : "",
    '#weight' => -45,
  );

  $form['contact_field_suffix_field'] = array(
    '#type' => 'textfield',
    '#title' => t("Field suffix"),
    '#description' => t("A suffix to field itself."),
    '#default_value' => isset($om_field_details->field_suffix) ? $om_field_details->field_suffix : "",
    '#weight' => -44,
  );

  $form['contact_field_require'] = array(
    '#type' => 'radios',
    '#title' => t("Required?"),
    '#description' => t("Whether this field is mandatory."),
    '#default_value' => isset($om_field_details->required) ? $om_field_details->required : 1,
    '#options' => array(
      0 => t("No"),
      1 => t("Yes"),
    ),
    '#required' => TRUE,
    '#weight' => -43,
  );

  $form['contact_field_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t("Display this field"),
    '#description' => t("Check this box to make this field available on
      contact form."),
    '#default_value' => isset($om_field_details->enabled) ? $om_field_details->enabled : 1,
    '#weight' => -42,
  );

  $form['contact_field_weight'] = array(
    '#type' => 'textfield',
    '#title' => t("Weight"),
    '#size' => 10,
    '#description' => t("Fields with positive weight will sink.
      Negative weight will make the field pop up."),
    '#default_value' => isset($om_field_details->weight) ? $om_field_details->weight : 0,
    '#weight' => -41,
  );

  $form['contact_field_help'] = array(
    '#type' => 'textarea',
    '#title' => t("Help text"),
    '#description' => t("Help text will appear just beneath the field like this,
      to help user in filling value in the field."),
    '#default_value' => isset($om_field_details->description) ? $om_field_details->description : "",
    '#weight' => -40,
  );

  $form['contact_field_submit'] = array(
    '#type' => 'submit',
    '#value' => t("Save configuration"),
  );

  return $form;
}

/**
 * Implementation of hook_submit().
 *
 * @param $form
 * @param $form_values
 * @return unknown_type
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_submit($form, $form_values) {
  $ss_field_name = $form_values['values']['contact_field_name'];
  $ss_field_type = $form_values['values']['field_type'];
  $ss_field_required = $form_values['values']['contact_field_require'];
  $ss_field_enabled = $form_values['values']['contact_field_enabled'];
  $ss_field_settings['title'] = $form_values['values']['contact_field_label'];
  $ss_field_settings['description'] = $form_values['values']['contact_field_help'];
  $ss_field_settings['prefix'] = $form_values['values']['contact_field_prefix'];
  $ss_field_settings['suffix'] = $form_values['values']['contact_field_suffix'];
  $ss_field_settings['maxlength'] = $form_values['values']['contact_field_maxlength'] ? $form_values['values']['contact_field_maxlength'] : 255;
  $ss_field_settings['field_prefix'] = $form_values['values']['contact_field_prefix_field'];
  $ss_field_settings['field_suffix'] = $form_values['values']['contact_field_suffix_field'];
  $ss_field_weight = $form_values['values']['contact_field_weight'];

  db_query("INSERT INTO {contact_fields} VALUES('%s', '%s', '%s', %d, %d, '%s', %d, '%s')",
    $ss_field_name, $ss_field_type, serialize($ss_field_settings),
    $ss_field_required, $ss_field_enabled, $ss_field_weight, 0, NULL);
  drupal_set_message($ss_field_settings['title'] ." ". t("created"));
  drupal_goto('admin/build/contact/manage');
}

/**
 *
 * @param unknown_type $form
 * @param unknown_type $form_values
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_update($form, $form_values) {
  $ss_field_name = $form_values['values']['contact_field_name'];
  $ss_field_type = $form_values['values']['field_type'];
  $ss_field_required = $form_values['values']['contact_field_require'];
  $ss_field_enabled = $form_values['values']['contact_field_enabled'];
  $ss_field_settings['description'] = $form_values['values']['contact_field_help'];
  $ss_field_settings['title'] = $form_values['values']['contact_field_label'];
  $ss_field_settings['prefix'] = $form_values['values']['contact_field_prefix'];
  $ss_field_settings['suffix'] = $form_values['values']['contact_field_suffix'];
  $ss_field_settings['maxlength'] = $form_values['values']['contact_field_maxlength'] ? $form_values['values']['contact_field_maxlength'] : 255;
  $ss_field_settings['field_prefix'] = $form_values['values']['contact_field_prefix_field'];
  $ss_field_settings['field_suffix'] = $form_values['values']['contact_field_suffix_field'];
  $ss_field_weight = $form_values['values']['contact_field_weight'];

  db_query("UPDATE {contact_fields} SET settings = '%s', enabled = %d,
    required = %d, weight = '%s' WHERE field_name = '%s'", serialize($ss_field_settings),
    $ss_field_enabled, $ss_field_required, $ss_field_weight, $ss_field_name);

  drupal_set_message($ss_field_settings['title'] ." ". t("updated"));
  drupal_goto('admin/build/contact/manage');
}

/**
 * contact_field_add_field_textarea_form
 *
 * Form builder function for text area
 *
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_add_field_textarea_form($form_state, $ss_field_name = NULL, $om_field_details = NULL) {
  drupal_set_title(t("Configure text area"));
  $form = array();
  if (arg(3) != 'add') {
    $om_field_details = (object) _get_field_values($om_field_details);
    $form['#submit'] = array('contact_field_textarea_update');
  }
  else {
    $form['#submit'] = array('contact_field_textarea_submit');
    $form['#validate'] = array('contact_field_validate');
  }

  $form['name'] = array(
    '#type' => 'item',
    '#title' => t("Field name"),
    '#value' => $om_field_details->name,
    '#description' => t("Field name can not be changed."),
    '#weight' => -50,
  );

  $form['contact_field_name'] = array(
    '#type' => 'hidden',
    '#value' => $om_field_details->name,
  );

  $form['field_type'] = array(
    '#type' => 'hidden',
    '#default_value' => 'textarea',
  );

  $form['contact_field_label'] = array(
    '#type' => 'textfield',
    '#title' => t("Field title"),
    '#description' => t("Provide the title of the field"),
    '#default_value' => $om_field_details->title,
    '#required' => TRUE,
    '#weight' => -49,
  );

  $form['contact_field_row'] = array(
    '#type' => 'textfield',
    '#title' => t("Rows"),
    '#description' => t("Number of rows. Default is 20."),
    '#default_value' => isset($om_field_details->rows) ? $om_field_details->rows : 20,
    '#weight' => -48,
  );

  $form['contact_field_column'] = array(
    '#type' => 'textfield',
    '#title' => t("Columns"),
    '#description' => t("Number of column. Default is 80."),
    '#default_value' => isset($om_field_details->cols) ? $om_field_details->cols : 80,
    '#weight' => -47,
  );

  $form['contact_field_require'] = array(
    '#type' => 'radios',
    '#title' => t("Required?"),
    '#description' => t("Whether this field is mandatory."),
    '#default_value' => isset($om_field_details->required) ? $om_field_details->required : 1,
    '#options' => array(
      0 => t("No"),
      1 => t("Yes"),
    ),
    '#required' => TRUE,
    '#weight' => -43,
  );

  $form['contact_field_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t("Display this field"),
    '#description' => t("Check this box to make this field available on
      contact form."),
    '#default_value' => isset($om_field_details->enabled) ? $om_field_details->enabled : 1,
    '#weight' => -42,
  );

  $form['contact_field_weight'] = array(
    '#type' => 'textfield',
    '#title' => t("Weight"),
    '#size' => 10,
    '#description' => t("Fields with positive weight will sink.
      Negative weight will make the field pop up."),
    '#default_value' => isset($om_field_details->weight) ? $om_field_details->weight : 0,
    '#weight' => -41,
  );

  $form['contact_field_help'] = array(
    '#type' => 'textarea',
    '#title' => t("Help text"),
    '#description' => t("Help text will appear just beneath the field like this,
      to help user in filling value in the field."),
    '#default_value' => isset($om_field_details->description) ? $om_field_details->description : "",
    '#weight' => -40,
  );

  $form['contact_field_submit'] = array(
    '#type' => 'submit',
    '#value' => t("Save configuration"),
  );

  return $form;
}

/**
 *
 * @param unknown_type $form
 * @param unknown_type $form_values
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_textarea_submit($form, $form_values) {
  $ss_field_name = $form_values['values']['contact_field_name'];
  $ss_field_type = $form_values['values']['field_type'];
  $ss_field_required = $form_values['values']['contact_field_require'];
  $ss_field_enabled = $form_values['values']['contact_field_enabled'];
  $ss_field_settings['description'] = $form_values['values']['contact_field_help'];
  $ss_field_settings['title'] = $form_values['values']['contact_field_label'];
  $ss_field_settings['rows'] = $form_values['values']['contact_field_row'];
  $ss_field_settings['cols'] = $form_values['values']['contact_field_column'];
  $ss_field_settings['description'] = $form_values['values']['contact_field_help'];
  $ss_field_weight = $form_values['values']['contact_field_weight'];

  db_query("INSERT INTO {contact_fields} VALUES('%s', '%s', '%s', %d, %d, '%s', %d, '%s')",
    $ss_field_name, $ss_field_type, serialize($ss_field_settings),
    $ss_field_required, $ss_field_enabled, $ss_field_weight, 0, NULL);
  drupal_set_message($ss_field_settings['title'] ." ". t("created"));
  drupal_goto('admin/build/contact/manage');
}

/**
 *
 * @param $form
 * @param $form_values
 * @author Bhavin H. Joshi <bhavinjosi@joshics.in>
 */
function contact_field_textarea_update($form, $form_values) {
  $ss_field_name = $form_values['values']['contact_field_name'];
  $ss_field_type = $form_values['values']['field_type'];
  $ss_field_required = $form_values['values']['contact_field_require'];
  $ss_field_enabled = $form_values['values']['contact_field_enabled'];
  $ss_field_settings['description'] = $form_values['values']['contact_field_help'];
  $ss_field_settings['title'] = $form_values['values']['contact_field_label'];
  $ss_field_settings['rows'] = $form_values['values']['contact_field_row'];
  $ss_field_settings['cols'] = $form_values['values']['contact_field_column'];
  $ss_field_settings['description'] = $form_values['values']['contact_field_help'];
  $ss_field_weight = $form_values['values']['contact_field_weight'];

  db_query("UPDATE {contact_fields} SET settings = '%s', enabled = %d,
    required = %d, weight = '%s' WHERE field_name = '%s'", serialize($ss_field_settings),
    $ss_field_enabled, $ss_field_required, $ss_field_weight, $ss_field_name);

  drupal_set_message($ss_field_settings['title'] ." ". t("updated"));
  drupal_goto('admin/build/contact/manage');
}
